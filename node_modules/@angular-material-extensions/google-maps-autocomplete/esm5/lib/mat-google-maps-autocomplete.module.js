/**
 * @fileoverview added by tsickle
 * Generated from: lib/mat-google-maps-autocomplete.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FlexLayoutModule } from '@angular/flex-layout';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatGoogleMapsAutocompleteDirective } from './directives/mat-google-maps-autocomplete.directive';
import { MatValidateAddressDirective } from './directives/address-validator/mat-address-validator.directive';
import { MatGoogleMapsAutocompleteComponent } from './component/mat-google-maps-autocomplete.component';
// tslint:disable-next-line:max-line-length
import { MatSearchGoogleMapsAutocompleteComponent } from './component/mat-search-google-maps-autocomplete/mat-search-google-maps-autocomplete.component';
import { MatInputModule } from '@angular/material/input';
import { MatIconModule } from '@angular/material/icon';
var MatGoogleMapsAutocompleteModule = /** @class */ (function () {
    function MatGoogleMapsAutocompleteModule() {
    }
    MatGoogleMapsAutocompleteModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        ReactiveFormsModule,
                        FlexLayoutModule,
                        MatInputModule,
                        MatIconModule
                    ],
                    exports: [
                        MatGoogleMapsAutocompleteComponent,
                        MatGoogleMapsAutocompleteDirective,
                        MatValidateAddressDirective,
                        MatSearchGoogleMapsAutocompleteComponent
                    ],
                    declarations: [
                        MatGoogleMapsAutocompleteComponent,
                        MatGoogleMapsAutocompleteDirective,
                        MatValidateAddressDirective,
                        MatSearchGoogleMapsAutocompleteComponent
                    ]
                },] }
    ];
    return MatGoogleMapsAutocompleteModule;
}());
export { MatGoogleMapsAutocompleteModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LWdvb2dsZS1tYXBzLWF1dG9jb21wbGV0ZS5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYW5ndWxhci1tYXRlcmlhbC1leHRlbnNpb25zL2dvb2dsZS1tYXBzLWF1dG9jb21wbGV0ZS8iLCJzb3VyY2VzIjpbImxpYi9tYXQtZ29vZ2xlLW1hcHMtYXV0b2NvbXBsZXRlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3QyxPQUFPLEVBQUMsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3ZDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ3RELE9BQU8sRUFBQyxXQUFXLEVBQUUsbUJBQW1CLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRSxPQUFPLEVBQUMsa0NBQWtDLEVBQUMsTUFBTSxxREFBcUQsQ0FBQztBQUN2RyxPQUFPLEVBQUMsMkJBQTJCLEVBQUMsTUFBTSxnRUFBZ0UsQ0FBQztBQUMzRyxPQUFPLEVBQUMsa0NBQWtDLEVBQUMsTUFBTSxvREFBb0QsQ0FBQzs7QUFFdEcsT0FBTyxFQUFDLHdDQUF3QyxFQUFDLE1BQU0sK0ZBQStGLENBQUM7QUFDdkosT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQUdyRDtJQUFBO0lBd0JBLENBQUM7O2dCQXhCQSxRQUFRLFNBQUM7b0JBQ1IsT0FBTyxFQUNMO3dCQUNFLFlBQVk7d0JBQ1osV0FBVzt3QkFDWCxtQkFBbUI7d0JBQ25CLGdCQUFnQjt3QkFDaEIsY0FBYzt3QkFDZCxhQUFhO3FCQUNkO29CQUNILE9BQU8sRUFBRTt3QkFDUCxrQ0FBa0M7d0JBQ2xDLGtDQUFrQzt3QkFDbEMsMkJBQTJCO3dCQUMzQix3Q0FBd0M7cUJBQ3pDO29CQUNELFlBQVksRUFBRTt3QkFDWixrQ0FBa0M7d0JBQ2xDLGtDQUFrQzt3QkFDbEMsMkJBQTJCO3dCQUMzQix3Q0FBd0M7cUJBQ3pDO2lCQUNGOztJQUVELHNDQUFDO0NBQUEsQUF4QkQsSUF3QkM7U0FEWSwrQkFBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7TmdNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGbGV4TGF5b3V0TW9kdWxlfSBmcm9tICdAYW5ndWxhci9mbGV4LWxheW91dCc7XG5pbXBvcnQge0Zvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge01hdEdvb2dsZU1hcHNBdXRvY29tcGxldGVEaXJlY3RpdmV9IGZyb20gJy4vZGlyZWN0aXZlcy9tYXQtZ29vZ2xlLW1hcHMtYXV0b2NvbXBsZXRlLmRpcmVjdGl2ZSc7XG5pbXBvcnQge01hdFZhbGlkYXRlQWRkcmVzc0RpcmVjdGl2ZX0gZnJvbSAnLi9kaXJlY3RpdmVzL2FkZHJlc3MtdmFsaWRhdG9yL21hdC1hZGRyZXNzLXZhbGlkYXRvci5kaXJlY3RpdmUnO1xuaW1wb3J0IHtNYXRHb29nbGVNYXBzQXV0b2NvbXBsZXRlQ29tcG9uZW50fSBmcm9tICcuL2NvbXBvbmVudC9tYXQtZ29vZ2xlLW1hcHMtYXV0b2NvbXBsZXRlLmNvbXBvbmVudCc7XG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bWF4LWxpbmUtbGVuZ3RoXG5pbXBvcnQge01hdFNlYXJjaEdvb2dsZU1hcHNBdXRvY29tcGxldGVDb21wb25lbnR9IGZyb20gJy4vY29tcG9uZW50L21hdC1zZWFyY2gtZ29vZ2xlLW1hcHMtYXV0b2NvbXBsZXRlL21hdC1zZWFyY2gtZ29vZ2xlLW1hcHMtYXV0b2NvbXBsZXRlLmNvbXBvbmVudCc7XG5pbXBvcnQge01hdElucHV0TW9kdWxlfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9pbnB1dCc7XG5pbXBvcnQge01hdEljb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2ljb24nO1xuXG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6XG4gICAgW1xuICAgICAgQ29tbW9uTW9kdWxlLFxuICAgICAgRm9ybXNNb2R1bGUsXG4gICAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgICAgRmxleExheW91dE1vZHVsZSxcbiAgICAgIE1hdElucHV0TW9kdWxlLFxuICAgICAgTWF0SWNvbk1vZHVsZVxuICAgIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBNYXRHb29nbGVNYXBzQXV0b2NvbXBsZXRlQ29tcG9uZW50LFxuICAgIE1hdEdvb2dsZU1hcHNBdXRvY29tcGxldGVEaXJlY3RpdmUsXG4gICAgTWF0VmFsaWRhdGVBZGRyZXNzRGlyZWN0aXZlLFxuICAgIE1hdFNlYXJjaEdvb2dsZU1hcHNBdXRvY29tcGxldGVDb21wb25lbnRcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTWF0R29vZ2xlTWFwc0F1dG9jb21wbGV0ZUNvbXBvbmVudCxcbiAgICBNYXRHb29nbGVNYXBzQXV0b2NvbXBsZXRlRGlyZWN0aXZlLFxuICAgIE1hdFZhbGlkYXRlQWRkcmVzc0RpcmVjdGl2ZSxcbiAgICBNYXRTZWFyY2hHb29nbGVNYXBzQXV0b2NvbXBsZXRlQ29tcG9uZW50XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgTWF0R29vZ2xlTWFwc0F1dG9jb21wbGV0ZU1vZHVsZSB7XG59XG4iXX0=